---
import { PAGES, SITE_TITLE, SOCIAL_MEDIA_ICONS } from "../../consts";
---

<header>
  <div>
    <a href="/" class="site-title-link" title="Home">
      <!-- The logo -->
      <!-- {{ partial "partials/logo.svg" . }} -->
      <span class="site-title">{SITE_TITLE}</span>
    </a>
  </div>
  <nav class="menu">
    {PAGES.map(([url, name, leetName]) => (
      <a href={url} title={name}>{leetName}</a>
    ))}
  </nav>
  <div class="text-start social-media-icons">
    {SOCIAL_MEDIA_ICONS.map(({faClass, link, title}) => (
      <a href={link}><i class={`menu-icon ${faClass}`} title={title} /></a>
    ))}
  </div>

  <!-- TODO add aria attributes? I assume changing the theme *probably* won't be too useful
  if you're using assistive technologies so not a huge priority -->
  <div id="theme-dropdown">
    <div id="theme-display">
      Theme
      <i id="theme-dropdown-arrow" class="fa-solid fa-chevron-down"></i>
    </div>
    <div id="theme-options">
      <div class="theme-option" onclick="setTheme(null)">
        <i class="fa-solid fa-circle-half-stroke system-theme-icon"></i>
        Sync with system
      </div>
      <div class="theme-option" onclick="setTheme('theme-light')" theme="theme-light">
        <i class="fa-solid fa-circle light-theme-icon"></i>
        Light
      </div>
      <div class="theme-option" onclick="setTheme('theme-dark')" theme="theme-dark">
        <i class="fa-solid fa-circle dark-theme-icon"></i>
        Dark
      </div>
      <div class="theme-option" onclick="setTheme('theme-ugly')" theme="theme-ugly">
        <i class="fa-solid fa-circle ugly-theme-icon"></i>
        Ugly
      </div>
    </div>
  </div>
</header>

<style lang="scss">
  @import "../../styles/common.scss";

  header {
    display: flex;
    flex-direction: row;
    align-items: center;
    border-bottom: solid;
    border-color: var(--divider-color);
    padding-bottom: 0.75rem;
    margin-bottom: 1.5rem;
    gap: 1.7rem;

    transition-duration: 0.5s;
  }

  .svg-logo {
    margin-right: 10px;
    color: var(--logo-text-bg);

    g {
      color: var(--logo-path);
      transition-property: color;
    }

    text {
      fill: var(--logo-text);
    }
  }

  /// For links that change color on hover
  @mixin hover-color-transition($from, $to) {
    color: $from;
    transition-property: color;

    &:hover {
      color: $to;
      transition-property: color;
    }
  }

  .site-title-link {
    @include hover-color-transition(var(--fg-color) !important, var(--link-color) !important);
    display: flex;
    text-decoration: none;
    align-items: center;

    &:hover>.svg-logo>g {
      color: var(--link-color);
      transition-property: color;
    }
  }

  .site-title {
    font-family: "PixeloidMono";
    font-weight: bold;
    font-size: xx-large;
  }

  .menu {
    display: inline-flex;
    margin-left: auto;
    gap: 1rem;
  }

  %menu-item {
    @include hover-color-transition(var(--fg-color) !important, var(--link-color) !important);
    font-family: "PixeloidMono";
    display: inline-block;
    position: relative;
    text-decoration: none;
    font-size: larger;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }

  // Style for the underline pseudo-element
  %menu-item-underline {
    content: "";
    position: absolute;
    width: 100%;
    bottom: 0;
    left: 0;
    background-color: var(--highlight-color);
  }

  .menu-item-selected {
    @extend %menu-item;
    font-weight: 900;
  }

  .menu-item-selected::after {
    @extend %menu-item-underline;
    height: 3px;
    transform: scaleX(1);
  }

  .menu-item-unselected {
    @extend %menu-item;
  }

  .menu-item-unselected::after {
    @extend %menu-item-underline;
    height: 2px;
    transform: scaleX(0);
    transform-origin: bottom center;
    transition: transform 0.25s ease-out;
  }

  .menu-item-unselected:hover::after {
    transform: scaleX(1);
    transform-origin: bottom center;
  }

  .social-media-icons {
    display: inline-flex;
    gap: 0.8rem;
  }

  .menu-icon {
    @include hover-color-transition(var(--fg-color), var(--link-color));
    font-size: 1.25rem;
  }

  #theme-dropdown {
    display: inline-block;
    position: relative;

    #theme-display {
      @include button-unselected();
      white-space: nowrap;

      cursor: default;

      padding: 0.2rem 0.4rem;
    }

    &:hover>#theme-display {
      @include button-hover();
    }

    #theme-options {
      display: flex;
      flex-direction: column;
      position: absolute;
      right: 0;
      background-color: var(--bg-color);
      border-radius: 8px;
      margin-top: 0.5rem;

      // TODO this wipe is pretty janky
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.5s;

      .theme-option {
        // display: none;
        cursor: pointer;
        z-index: 1;
        background-color: var(--bg-hoverable);
        padding: 0.3rem 0.5rem;
        white-space: nowrap;
        transition: background-color 0.3s;

        &:hover {
          background-color: var(--bg-hover);
          transition: background-color 0.3s;
        }

        &.selected {
          background-color: var(--bg-selected);
        }

        &:hover.selected {
          background-color: var(--bg-selected-hover);
          transition: background-color 0.3s;
        }
      }
    }

    #theme-dropdown-arrow {
      transition: transform 0.5s;
    }

    &:hover {
      #theme-options {
        max-height: 200px;
        transition: max-height 0.5s;
      }

      #theme-dropdown-arrow {
        transform: rotate(180deg);
        transition: transform 0.5s;
      }
    }
  }

  @mixin themeIcon($stroke, $fill) {
    color: $stroke;
    background-color: $fill;
    clip-path: circle();
  }

  .system-theme-icon {
    @include themeIcon(var(--dark-bg), var(--light-bg));
  }

  .light-theme-icon {
    @include themeIcon(var(--light-bg), var(--bg-color));
  }

  .dark-theme-icon {
    @include themeIcon(var(--dark-bg), var(--bg-color));
  }

  .ugly-theme-icon {
    @include themeIcon(var(--ugly-fg), var(--bg-color));
  }
</style>
